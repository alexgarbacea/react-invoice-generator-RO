{"version":3,"sources":["firebase.js","Contexts/AuthContext.js","InvoiceStructures/InvoiceStructure.js","Components/Invoice.js","Components/MainMenu.js","Components/NavigationBar.js","Components/ProdDisplay.js","Components/NewInvoice.js","Components/Login.js","Components/Register.js","Components/PrivateRoute.js","Components/MyCompanies.js","Components/MyProfile.js","Components/Clients.js","Components/History.js","Components/Products.js","App.js","AppMobile.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userCompanies","setUserCompanies","clients","setClients","invoices","setInvoices","invoicesEarnings","setInvoicesEarnings","lastInvoiceData","setLastInvoiceData","products","setProducts","loading","setLoading","dbLoading","setDbLoading","error","setError","history","useHistory","signup","name","email","phone","password","a","createUserWithEmailAndPassword","then","res","user","updateProfile","displayName","sendEmailVerification","push","message","login","signInWithEmailAndPassword","resetPassword","sendPasswordResetEmail","alert","updateEmail","err","console","log","getCompanies","id","collection","where","get","results","forEach","compData","data","compId","prev","newCompany","cif","regCom","address","capSoc","bank","account","tva","tvaPay","logo","serie","nrStart","term","delName","delCI","delCNP","add","uid","updateCompany","doc","update","deleteCompany","window","confirm","delete","getClients","cliId","newClient","updateClient","deleteClient","getLastInvoice","comp","orderBy","limit","getInvoices","sum","invId","items","map","item","val","parseFloat","deleteInvoice","newInvoice","invoiceDate","invoiceTerm","invoiceSeries","invoiceNr","delSeries","transport","companyName","companyCIF","companyRegCom","companyAdresa","companyCapSocial","companyCont","companyBank","companyTelefon","companyTVA","companyTVApay","companyLogo","clientName","clientCIF","clientRegCom","clientAdresa","clientCont","clientBank","getProducts","prodData","prodId","deleteProduct","newProduct","um","price","updateProduct","useEffect","onAuthStateChanged","value","verifyEmail","logout","signOut","updatePassword","Provider","InvoiceStructure","forwardRef","ref","nota","border","currentTemplate","setCurrentTemplate","frmt","Intl","NumberFormat","formatDate","d","Date","mnth","getMonth","slice","dy","getDate","getFullYear","getTotal","total","format","getPartial","templates","className","src","alt","style","borderRight","marginLeft","i","qt","unitPrice","borderTop","colSpan","rowSpan","backgroundColor","textAlign","verticalAlign","paddingBottom","marginTop","fontStyle","fontSize","cursor","left","onClick","length","title","Invoice","onbeforeunload","defaultColor","setNota","setBorder","hideMenu","setHideMenu","componentRef","useRef","handlePrint","useReactToPrint","content","current","to","position","bottom","right","userSelect","type","checked","readOnly","defaultValue","onChange","e","document","documentElement","setProperty","bgColor","target","txtColor","textDecoration","MainMenu","customButton","width","paddingTop","NavigationBar","ProdDisplay","valTVA","delProd","color","fontWeight","NewInvoice","generateInvoice","setInvoiceDate","setInvoiceTerm","setInvoiceSeries","setInvoiceNr","setDelName","setDelCNP","setDelSeries","setTransport","compAuto","setCompAuto","setCompanyName","setCompanyCIF","setCompanyRegCom","setCompanyAdresa","setCompanyCapSocial","setCompanyCont","setCompanyBank","setCompanyTelefon","setCompanyTVA","setCompanyTVApay","setCompanyLogo","cont","telefon","companyErrors","setCompanyErrors","setClientName","setClientCIF","setClientRegCom","setClientAdresa","setClientCont","setClientBank","clientErrors","setClientErrors","prodDescr","setProdDescr","prodUM","setProdUM","prodQty","setProdQty","prodUnitPrice","setProdUnitPrice","prodTotal","setProdTotal","prodTVA","setProdTVA","setItems","updateData","Promise","resolve","setTimeout","finalData","returnInvoiceSeries","returnInvoiceNr","updateCompanyCIF","client","includes","vNr","cifNr","parseInt","replace","c1","Math","floor","t","c2","checkCIF","updateCompanyRegCom","RegExp","test","checkRegCom","updateCompanyCont","checkIban","updateProdUnitPrice","toFixed","autoCompleteCompany","compFilter","filter","currentComp","autoCompleteClient","autoComplateProduct","currentProd","prod","min","placeholder","required","toUpperCase","pattern","updateCompanyTVA","accept","URL","createObjectURL","updateCompanyLogo","files","cli","onSubmit","preventDefault","prodFilter","productSelector","updateProdQty","step","index","Login","mail","setMail","pass","setPass","handleLogin","autoComplete","Register","setName","setPhone","handleRegister","PrivateRoute","Component","component","rest","render","props","MyCompanies","addNew","setAddNew","setUpdate","companyId","setCompanyId","resetValues","toggleForm","emailVerified","editField","editComp","padding","deleteCom","MyProfile","info","setInfo","edit","setEdit","setEmail","phoneNumber","handleUpdateProfile","borderRadius","metadata","creationTime","Clients","editClientHandle","deleteClientHandle","History","openFilter","setOpenFilter","filteredInvoices","setFilteredInvoices","range","minVal","maxVal","filters","setFilters","filterInvoiceShow","f","getValue","filterKeys","Object","keys","filterRes","inv","every","key","getTotalOfOnvoice","dateFilter","viewInvoice","filterInvoice","invoice","currentInvoice","resetFilters","itms","itm","marginBottom","marginBlock","Products","setProdId","setCompId","setUm","setPrice","editProd","deleteProd","App","invoiceData","setInvoiceData","exact","path","AppMobile","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50dba791.chunk.js","sourcesContent":["//import firebase from \"firebase/compat/app\";\r\nimport firebase from \"firebase\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst data = {\r\n    apiKey: \"AIzaSyDjdm5ghzxaj2VN-pGl3bBM0gBmWTKax3I\",\r\n    authDomain: \"invoice-generator-1.firebaseapp.com\",\r\n    projectId: \"invoice-generator-1\",\r\n    storageBucket: \"invoice-generator-1.appspot.com\",\r\n    messagingSenderId: \"726025216245\",\r\n    appId: \"1:726025216245:web:b86d28b31c6f80cf8325bc\",\r\n    measurementId: \"G-W4JHWSRNN5\"\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(data);\r\n\r\nexport const auth = app.auth();\r\n\r\nexport const db = app.firestore();\r\n\r\nexport const signOutAccount = () => {\r\n    auth.signOut();\r\n}\r\n\r\nexport default app;\r\n\r\n\r\n// Get a list of cities from your database\r\n// async function getCities(db) {\r\n//     const citiesCol = collection(db, 'cities');\r\n//     const citySnapshot = await getDocs(citiesCol);\r\n//     const cityList = citySnapshot.docs.map(doc => doc.data());\r\n//     return cityList;\r\n// }","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { auth, db } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [userCompanies, setUserCompanies] = useState([]);\r\n    const [clients, setClients] = useState([])\r\n    const [invoices, setInvoices] = useState([])\r\n    const [invoicesEarnings, setInvoicesEarnings] = useState();\r\n    const [lastInvoiceData, setLastInvoiceData] = useState({});\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [dbLoading, setDbLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const signup = async (name, email, phone, password) => {\r\n        setError('')\r\n        setDbLoading(true)\r\n        try{\r\n            await auth.createUserWithEmailAndPassword(email, password)\r\n            .then(res => {\r\n                const user = res.user;\r\n\r\n                user.updateProfile({\r\n                    displayName: name\r\n                })\r\n\r\n                //user.updatePhoneNumber(phone)\r\n\r\n                user.sendEmailVerification();\r\n                history.push('/')\r\n\r\n            })\r\n        }\r\n        catch(err){\r\n            setError(err.message)\r\n        }\r\n        setDbLoading(false)\r\n    }\r\n\r\n    const verifyEmail = () => {\r\n        try{\r\n            auth.onAuthStateChanged(user => user.sendEmailVerification())\r\n            alert(`Email verification sent.\\nRefresh the page after you verify your email.`)\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const login = async (email, password) => {\r\n        setError('')\r\n        setDbLoading(true)\r\n        try { \r\n            await auth.signInWithEmailAndPassword(email, password)\r\n            history.push('/')\r\n        }\r\n        catch(err){\r\n            setError(err.message)\r\n        }\r\n        setDbLoading(false)\r\n    }\r\n\r\n    const logout = () => {\r\n        return auth.signOut()\r\n    }\r\n\r\n    const resetPassword = async (email) => {\r\n        setDbLoading(true)\r\n        try{\r\n            await auth.sendPasswordResetEmail(email)\r\n            return alert('Password reset link sent!')\r\n        }\r\n        catch(err){\r\n            setError(err.message)\r\n        }\r\n        setDbLoading(false)\r\n    }\r\n\r\n    const updateEmail = (email) => {\r\n        setError('')\r\n        setDbLoading(true)\r\n        try{\r\n            currentUser.updateEmail(email)\r\n        }\r\n        catch(err){\r\n            setError(err.message)\r\n        }\r\n        setDbLoading(false)\r\n    }\r\n\r\n    const updatePassword = (email) => {\r\n        setError('')\r\n        setDbLoading(true)\r\n        try {\r\n            currentUser.updatePassword(email)\r\n        }\r\n        catch (err) {\r\n            setError(err.message)\r\n        }\r\n        setDbLoading(false)\r\n    }\r\n\r\n    const updateProfile = async (name, email, phone) => {\r\n        try{\r\n            currentUser.updateProfile({\r\n                displayName: name\r\n            })\r\n            //currentUser.updatePhoneNumber(phone);\r\n            updateEmail(email);\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    //COMPANY \r\n    const getCompanies = async (id) => {\r\n        try{\r\n            setUserCompanies([]);\r\n            await db.collection('Companies').where(\"uid\", \"==\", id)\r\n            .get().then(results => {\r\n                results.forEach(res => {\r\n                    const compData = {...res.data(), compId: res.id}\r\n                    setUserCompanies(prev => [...prev, compData])\r\n                })\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const newCompany = async (name, cif, regCom, address, capSoc, bank, account, phone, tva, tvaPay, logo,\r\n        serie, nrStart, term, delName, delCI, delCNP) => {\r\n        try{\r\n            await db.collection(\"Companies\").add({\r\n                uid: currentUser.uid,\r\n                name,\r\n                cif,\r\n                regCom,\r\n                address,\r\n                capSoc,\r\n                bank,\r\n                account,\r\n                phone,\r\n                tva,\r\n                tvaPay,\r\n                logo,\r\n                serie,\r\n                nrStart,\r\n                term,\r\n                delName,\r\n                delCI,\r\n                delCNP\r\n            });\r\n            alert(`The company ${name} was added!`);\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n            //console.log('error creating company')\r\n        }\r\n    }\r\n\r\n    const updateCompany = async (id, name, cif, regCom, address, capSoc, bank, account, phone, tva, tvaPay, logo,\r\n        serie, nrStart, term, delName, delCI, delCNP) => {\r\n        try{\r\n            await db.collection('Companies').doc(id).update({\r\n                name,\r\n                cif,\r\n                regCom,\r\n                address,\r\n                capSoc,\r\n                bank,\r\n                account,\r\n                phone,\r\n                tva,\r\n                tvaPay,\r\n                logo,\r\n                serie,\r\n                nrStart,\r\n                term,\r\n                delName,\r\n                delCI,\r\n                delCNP\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const deleteCompany = async (id) => {\r\n        const ask = window.confirm('Are you sure you want to delete this company?');\r\n        if(ask){\r\n            try{\r\n                await db.collection(\"Companies\").doc(id).delete()\r\n            }\r\n            catch(err){\r\n                console.log(err.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    //Clients\r\n    const getClients = async (id) => {\r\n        try {\r\n            setClients([]);\r\n            await db.collection('Clients').where(\"uid\", \"==\", id)\r\n                .get().then(results => {\r\n                    results.forEach(res => {\r\n                        const compData = { ...res.data(), cliId: res.id }\r\n                        setClients(prev => [...prev, compData])\r\n                    })\r\n                })\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const newClient = async (name, cif, regCom, address, bank, account) => {\r\n        try {\r\n            await db.collection(\"Clients\").add({\r\n                uid: currentUser.uid,\r\n                name,\r\n                cif,\r\n                regCom,\r\n                address,\r\n                bank,\r\n                account\r\n            });\r\n            alert(`The client ${name} was added!`);\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n            //console.log('error creating company')\r\n        }\r\n    }\r\n\r\n    const updateClient = async (id, name, cif, regCom, address, bank, account) => {\r\n        try {\r\n            await db.collection('Clients').doc(id).update({\r\n                name,\r\n                cif,\r\n                regCom,\r\n                address,\r\n                bank,\r\n                account\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const deleteClient = async (id) => {\r\n        const ask = window.confirm('Are you sure you want to delete this client?');\r\n        if (ask) {\r\n            try {\r\n                await db.collection(\"Clients\").doc(id).delete()\r\n            }\r\n            catch (err) {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    //get last number and series of company invoice\r\n    const getLastInvoice = async (comp) => {\r\n        try{\r\n            await db.collection('Invoices').where(\"companyName\", \"==\", comp)\r\n            .orderBy('invoiceDate', \"desc\").limit(1)\r\n            .get().then(results => {\r\n                results.forEach( res => {\r\n                    return setLastInvoiceData(res.data())\r\n                })\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    //invoice\r\n    const getInvoices = async (id) => {\r\n        let sum = 0;\r\n        try {\r\n            setInvoices([]);\r\n            await db.collection('Invoices').where(\"uid\", \"==\", id).orderBy('invoiceDate', \"desc\")\r\n            .get().then(results => {\r\n                results.forEach(res => {\r\n                    const compData = { ...res.data(), invId: res.id }\r\n                    setInvoices(prev => [...prev, compData])\r\n                    //sum total earnings\r\n                    res.data().items.map(item => {\r\n                        return sum += ((item.val && parseFloat(item.val)) + (item.tva && parseFloat(item.tva)));\r\n                    })\r\n                })\r\n            })\r\n            setInvoicesEarnings(sum);\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const deleteInvoice = async (id) => {\r\n        const ask = window.confirm('Are you sure you want to delete this invoice?');\r\n        if (ask) {\r\n            try {\r\n                await db.collection(\"Invoices\").doc(id).delete()\r\n            }\r\n            catch (err) {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const newInvoice = async (data) => {\r\n        try {\r\n            await db.collection(\"Invoices\").add({\r\n                uid: currentUser.uid,\r\n                invoiceDate: data.invoiceDate,\r\n                invoiceTerm: data.invoiceTerm,\r\n                invoiceSeries: data.invoiceSeries,\r\n                invoiceNr: data.invoiceNr,\r\n                delName: data.delName,\r\n                delCNP: data.delCNP,\r\n                delSeries: data.delSeries,\r\n                transport: data.transport,\r\n                companyName: data.companyName,\r\n                companyCIF: data.companyCIF,\r\n                companyRegCom: data.companyRegCom,\r\n                companyAdresa: data.companyAdresa,\r\n                companyCapSocial: data.companyCapSocial,\r\n                companyCont: data.companyCont,\r\n                companyBank: data.companyBank,\r\n                companyTelefon: data.companyTelefon,\r\n                companyTVA: data.companyTVA,\r\n                companyTVApay: data.companyTVApay,\r\n                companyLogo: data.companyLogo,\r\n                clientName: data.clientName,\r\n                clientCIF: data.clientCIF,\r\n                clientRegCom: data.clientRegCom,\r\n                clientAdresa: data.clientAdresa,\r\n                clientCont: data.clientCont,\r\n                clientBank: data.clientBank,\r\n                items: data.items\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n            //console.log('error creating company')\r\n        }\r\n    }\r\n\r\n    //Products and services\r\n    const getProducts = async(id) => {\r\n        try {\r\n            setProducts([]);\r\n            await db.collection('Products').where(\"uid\", \"==\", id)\r\n                .get().then(results => {\r\n                    results.forEach(res => {\r\n                        const prodData = { ...res.data(), prodId: res.id }\r\n                        setProducts(prev => [...prev, prodData])\r\n                    })\r\n                })\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const deleteProduct = async (id) => {\r\n        const ask = window.confirm('Are you sure you want to delete this product/service?');\r\n        if (ask) {\r\n            try {\r\n                await db.collection(\"Products\").doc(id).delete()\r\n            }\r\n            catch (err) {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const newProduct = async (name, um, price, compId) => {\r\n        try {\r\n            await db.collection(\"Products\").add({\r\n                uid: currentUser.uid,\r\n                name,\r\n                um,\r\n                price,\r\n                compId\r\n            });\r\n            alert(`The product/service ${name} was added!`);\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const updateProduct = async (id, name, um, price, compId) => {\r\n        try {\r\n            await db.collection('Products').doc(id).update({\r\n                name,\r\n                um,\r\n                price,\r\n                compId\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    //end\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        verifyEmail,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n        updateProfile,\r\n        error,\r\n        userCompanies,\r\n        getCompanies,\r\n        newCompany,\r\n        updateCompany,\r\n        deleteCompany,\r\n        dbLoading,\r\n        clients,\r\n        getClients,\r\n        newClient,\r\n        updateClient,\r\n        deleteClient,\r\n        invoices,\r\n        getInvoices,\r\n        newInvoice,\r\n        invoicesEarnings,\r\n        getLastInvoice,\r\n        lastInvoiceData,\r\n        deleteInvoice,\r\n        getProducts,\r\n        products,\r\n        deleteProduct,\r\n        newProduct,\r\n        updateProduct\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const InvoiceStructure = React.forwardRef(({ data, nota, border }, ref) => {\r\n\r\n    const [currentTemplate, setCurrentTemplate] = useState(0);\r\n\r\n    const frmt = new Intl.NumberFormat('en-US');\r\n\r\n    const formatDate = (d) => {\r\n        const res = new Date(d);\r\n        const mnth = res.getMonth() + 1 < 10 ? (\"0\" + res.getMonth() + 1).slice(-2) : res.getMonth() + 1\r\n        const dy = res.getDate() < 10 ? (\"0\" + res.getDate()).slice(-2) : res.getDate()\r\n        return `${dy}/${mnth}/${res.getFullYear()}`;\r\n    }\r\n\r\n    const getTotal = () => {\r\n        let total = 0;\r\n        data.items.map(item => total += (parseFloat(item.val) + parseFloat(item.tva)))\r\n        return frmt.format(total)\r\n    }\r\n\r\n    const getPartial = (tva) => {\r\n        let total = 0\r\n        if (!tva) {\r\n            data.items.map(item => total += parseFloat(item.val))\r\n            return frmt.format(total)\r\n        }\r\n        else {\r\n            data.items.map(item => total += parseFloat(item.tva))\r\n            return frmt.format(total)\r\n        }\r\n    }\r\n\r\n    const tp1 = () => {\r\n        return (\r\n            <div className=\"print-bg\" ref={ref}>\r\n                <div className=\"page a4\">\r\n                    <div className=\"page-padding\">\r\n                        <div className=\"page-row\">\r\n                            {data.companyLogo &&\r\n                                <img className=\"img-invoice\" src={data.companyLogo} alt=\"company logo\" />\r\n                            }\r\n\r\n                            <div className=\"invoice-top-data\">\r\n                                <h1>FACTURĂ</h1>\r\n                                <table className=\"table-item-preview table-invoice-top\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Serie</th>\r\n                                            <th>Număr</th>\r\n                                            <th>Dată</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{data.invoiceSeries}</td>\r\n                                            <td>{data.invoiceNr}</td>\r\n                                            <td>\r\n                                                {formatDate(data.invoiceDate)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"page-row company-table\">\r\n                            <div className=\"company-table-inside\" style={{ borderRight: '2px solid #ddd' }}>\r\n                                <div>Furnizor:</div>\r\n                                <div>{data.companyName}</div>\r\n                                <div>CIF: {data.companyCIF}</div>\r\n                                <div>Reg. com.: {data.companyRegCom}</div>\r\n                                <div>Adresă: {data.companyAdresa}</div>\r\n                                <div>Telefon: {data.companyTelefon}</div>\r\n                                <div>Cont: {data.companyCont}</div>\r\n                                <div>Bancă: {data.companyBank}</div>\r\n                                <div>Cap. social: {data.companyCapSocial}</div>\r\n                                {data.companyTVA > 0 &&\r\n                                    <>\r\n                                        <div>\r\n                                            Cotă TVA: {data.companyTVA}% - {data.companyTVApay && 'TVA la încasare'}\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"company-table-inside\" style={{ marginLeft: '10px' }}>\r\n                                <div>Client:</div>\r\n                                <div>{data.clientName}</div>\r\n                                <div>CIF: {data.clientCIF}</div>\r\n                                <div>Reg. com.: {data.clientRegCom}</div>\r\n                                <div>Adresă: {data.clientAdresa}</div>\r\n                                <div>Cont: {data.clientCont}</div>\r\n                                <div>Bancă: {data.clientBank}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <table className={border ? \"table-item-preview table-invoice-services\" :\r\n                            \"table-item-preview table-invoice-services table-nomargin\"}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nr. crt</th>\r\n                                    <th>Denumirea produselor sau a serviciilor</th>\r\n                                    <th>U.M.</th>\r\n                                    <th>Cantitate</th>\r\n                                    <th>Preț unitar</th>\r\n                                    <th>Valoare lei</th>\r\n                                    {data.companyTVA > 0 && <th>Valoare TVA</th>}\r\n                                </tr>\r\n                                {data.items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td>{i + 1}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.um}</td>\r\n                                            <td>{frmt.format(parseFloat(item.qt))}</td>\r\n                                            <td>{frmt.format(parseFloat(item.unitPrice))}</td>\r\n                                            <td>{frmt.format(parseFloat(item.val))}</td>\r\n                                            {data.companyTVA > 0 && <td>{frmt.format(parseFloat(item.tva))}</td>}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                                <tr style={{ borderTop: '4px solid #ddd' }}>\r\n                                    <td colSpan={1} rowSpan={2} style={{ backgroundColor: 'white' }} >\r\n                                        <div style={{ textAlign: 'right' }}>\r\n                                            <div>Delegat:</div>\r\n                                            <div>CNP:</div>\r\n                                            <div>C.I.:</div>\r\n                                            <div>Transport:</div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td colSpan={3} rowSpan={2} \r\n                                    style={{ backgroundColor: 'white', verticalAlign: 'top' }}>\r\n                                        <div style={{ textAlign: 'left' }}>\r\n                                            <div>{data.delName}</div>\r\n                                            <div>{data.delCNP}</div>\r\n                                            <div>{data.delSeries}</div>\r\n                                            <div>{data.transport}</div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td colSpan={1} rowSpan={2}>TOTAL:</td>\r\n                                    {data.companyTVA > 0 && <>\r\n                                        <td>{getPartial(false)}</td>\r\n                                        <td>{getPartial(true)}</td></>}\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={data.companyTVA > 0 ? 2 : 1}>{getTotal()} lei</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={4} style={{ paddingBottom: '20%', backgroundColor: 'white' }}>\r\n                                        Semnătură și ștampilă furnizor\r\n                                    </td>\r\n                                    <td colSpan={3} style={{ paddingBottom: '20%', backgroundColor: 'white' }}>\r\n                                        Semnătură de primire\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            Termen de plată: {data.invoiceTerm} zile de la emiterea facturii.\r\n                        </div>\r\n                        {nota && <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                            <small >\r\n                                Notă: Potrivit art. 319, alin. 29 din Legea nr.227/2015 privind Codul fiscal,<br />\r\n                                <span style={{ fontStyle: 'italic' }}>\r\n                                    \"semnarea si stampilarea facturilor nu constituie elemente \r\n                                    obligatorii pe care trebuie sa le contina factura\".\r\n                                </span>\r\n                            </small>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const tp2 = () => {\r\n        return(\r\n            <div className=\"print-bg\" ref={ref}>\r\n                <div className=\"page a4\">\r\n                    <div className=\"page-padding\">\r\n                        <div className=\"page-row\">\r\n                            {data.companyLogo &&\r\n                                <img className=\"img-invoice\" src={data.companyLogo} alt=\"company logo\" />\r\n                            }\r\n                            <div className=\"invoice-top-data\">\r\n                                <table className=\"table-item-preview table-invoice-top table-nomargin\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th style={{fontSize:'2em'}}>Factura</th>\r\n                                            <th></th>\r\n                                            <th>{data.invoiceSeries} {data.invoiceNr}</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan={3} style={{textAlign:'left'}}>\r\n                                                Data emiterii: {formatDate(data.invoiceDate)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"page-row company-table\" style={{border:'none'}}>\r\n                            <div className=\"company-table-inside\">\r\n                                \r\n                                <div>Furnizor:</div>\r\n\r\n                                <table className=\"table-nomargin table-strong-title\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td colSpan={2}>{data.companyName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>CIF:</td>\r\n                                            <td>{data.companyCIF}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Reg. com.:</td>\r\n                                            <td>{data.companyRegCom}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Adresă:</td>\r\n                                            <td>{data.companyAdresa}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Telefon:</td>\r\n                                            <td>{data.companyTelefon}</td>\r\n                                        </tr>\r\n                                        {data.companyCont && <tr>\r\n                                            <td>Cont:</td>\r\n                                            <td>{data.companyCont}</td>\r\n                                        </tr>}\r\n                                        {data.companyBank && <tr>\r\n                                            <td>Bancă:</td>\r\n                                            <td>{data.companyBank}</td>\r\n                                        </tr>}\r\n                                        <tr>\r\n                                            <td>Cap. social:</td>\r\n                                            <td>{data.companyCapSocial} lei</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                {data.companyTVA > 0 &&\r\n                                    <>\r\n                                        <div>\r\n                                            Cotă TVA: {data.companyTVA}% - {data.companyTVApay && 'TVA la încasare'}\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"company-table-inside\" style={{ marginLeft: '10px' }}>\r\n                                <div>Client:</div>\r\n\r\n                                <table className=\"table-nomargin table-strong-title\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td colSpan={2}>{data.clientName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>CIF:</td>\r\n                                            <td>{data.clientCIF}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Reg. com.:</td>\r\n                                            <td>{data.clientRegCom}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Adresă:</td>\r\n                                            <td>{data.clientAdresa}</td>\r\n                                        </tr>\r\n                                        {data.clientCont && <tr>\r\n                                            <td>Cont:</td>\r\n                                            <td>{data.clientCont}</td>\r\n                                        </tr>}\r\n                                        {data.clientBank && <tr>\r\n                                            <td>Bancă:</td>\r\n                                            <td>{data.clientBank}</td>\r\n                                        </tr>}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <table className={border ? \"table-item-preview table-invoice-services\" : \r\n                            \"table-item-preview table-invoice-services table-nomargin\"}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nr</th>\r\n                                    <th>Denumire produs/serviciu</th>\r\n                                    <th>U.M.</th>\r\n                                    <th>Cant.</th>\r\n                                    <th>Preț unitar</th>\r\n                                    <th>Valoare lei</th>\r\n                                    {data.companyTVA > 0 && <th>Valoare TVA</th>}\r\n                                </tr>\r\n                                {data.items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td>{i + 1}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.um}</td>\r\n                                            <td>{frmt.format(parseFloat(item.qt))}</td>\r\n                                            <td>{frmt.format(parseFloat(item.unitPrice))}</td>\r\n                                            <td>{frmt.format(parseFloat(item.val))}</td>\r\n                                            {data.companyTVA > 0 && <td>{frmt.format(parseFloat(item.tva))}</td>}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                                <tr>\r\n                                    <td colSpan={5} rowSpan={2} style={{textAlign:'right'}}>TOTAL:</td>\r\n                                    {data.companyTVA > 0 && <>\r\n                                        <td>{getPartial(false)} lei</td>\r\n                                        <td>{getPartial(true)} lei</td></>}\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={data.companyTVA > 0 ? 2 : 1}>{getTotal()} lei</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const templates = [\r\n        tp1(),\r\n        tp2()\r\n    ]\r\n\r\n    const changeTemplate = () => {\r\n        return currentTemplate === templates.length - 1 \r\n        ? setCurrentTemplate(0) : setCurrentTemplate(currentTemplate + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {templates[currentTemplate]}\r\n\r\n            <div className=\"invoice-menu\" style={{ cursor: 'pointer', left: '120px' }}\r\n                onClick={() => changeTemplate()}\r\n                title=\"change template\">\r\n                👁️\r\n            </div>\r\n        </>\r\n    )\r\n})","import React, { useRef, useState } from \"react\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Link } from \"react-router-dom\";\r\nimport { InvoiceStructure } from \"../InvoiceStructures/InvoiceStructure\";\r\n//https://www.npmjs.com/package/react-to-print\r\n\r\n\r\nconst Invoice = ({ data }) => {\r\n\r\n    window.onbeforeunload = () => {\r\n        return \"Refresh?\";\r\n    };\r\n\r\n    const defaultColor = '#2991F7';\r\n\r\n    const [nota, setNota] = useState(true);\r\n    const [border, setBorder] = useState(true);\r\n    const [hideMenu, setHideMenu] = useState(false);\r\n\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    const bgColor = (e) => {\r\n        document.documentElement.style.setProperty('--table-bg', e);\r\n    }\r\n\r\n    const txtColor = e => {\r\n        document.documentElement.style.setProperty('--table-text', e);\r\n    }\r\n\r\n    const resetValues = () => {\r\n        document.documentElement.style.setProperty('--table-bg', defaultColor);\r\n        document.documentElement.style.setProperty('--table-text', '#ffffff');\r\n        setNota(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {data.items ? \r\n            <>\r\n                <InvoiceStructure ref={componentRef} data={data} nota={nota} border={border} />\r\n                <Link to={'/'} className=\"btn btn-close-hide btn-left\" >X</Link>\r\n                <span title=\"save\"\r\n                    style={{ position: 'fixed', bottom: '1%', right: '10px', }}\r\n                    className=\"btn btn-right\"\r\n                    onClick={handlePrint}>Save\r\n                </span>\r\n                {hideMenu &&\r\n                    <div className=\"invoice-menu\">\r\n\r\n                        <div onClick={() => setNota(!nota)} style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                            Notă subsol: <input style={{ cursor: 'pointer' }} type='checkbox' checked={nota} readOnly />\r\n                        </div>\r\n                        <div onClick={() => setBorder(!border)} style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                            Chenar tabel: <input style={{ cursor: 'pointer' }} type='checkbox' checked={border} readOnly />\r\n                        </div>\r\n                        <div>\r\n                            <label>Background: </label>\r\n                            <input type='color' defaultValue={defaultColor} onChange={(e) => bgColor(e.target.value)} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Text: </label>\r\n                            <input type='color' defaultValue={'#ffffff'} onChange={(e) => txtColor(e.target.value)} />\r\n                        </div>\r\n                        <div style={{ textAlign: 'center', textDecoration: 'underline' }}>\r\n                            <small style={{ cursor: 'pointer' }} onClick={resetValues}>Reset values</small>\r\n                        </div>\r\n                        <small style={{ cursor: 'pointer', textDecoration: 'underline' }}\r\n                            onClick={() => setHideMenu(false)}\r\n                            title=\"close options\">\r\n                            close\r\n                        </small>\r\n                    </div>}\r\n                {!hideMenu &&\r\n                    <div className=\"invoice-menu\" style={{ cursor: 'pointer' }}\r\n                        onClick={() => setHideMenu(true)}\r\n                        title=\"options\">\r\n                        ⚙️\r\n                    </div>\r\n                }\r\n            </>\r\n            :\r\n                <div style={{textAlign:'center'}}>\r\n                    <h1>No data for invoice :(</h1>\r\n                    <Link to={'/'}>Go back</Link>\r\n                </div>\r\n            }\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Invoice\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { signOutAccount } from \"../firebase\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\n\r\nconst MainMenu = () => {\r\n    const history = useHistory();\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    const customButton = { fontSize: '30px', width: '50% '};\r\n\r\n    const signOut = () => {\r\n        signOutAccount();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\" >\r\n            <h1 style={{paddingTop:'5%', fontSize:'50px'}}>INVOICE GENERATOR</h1>\r\n            {currentUser && <h3>Hello, {currentUser.displayName}</h3>}\r\n            <div className=\"main-select\">\r\n                <Link className=\"btn\" style={customButton} \r\n                    to={'/new-invoice'}>New Invoice</Link>\r\n                {currentUser ?\r\n                    <>\r\n                        <Link className=\"btn\" style={customButton}\r\n                            to={'/profile'}>My profile</Link>\r\n                            \r\n                        <Link className=\"btn\" style={customButton}\r\n                            to={'/companies'}>My companies</Link>\r\n\r\n                        <Link className=\"btn\" style={customButton}\r\n                            to={'/clients'}>Clients</Link>\r\n\r\n                        <Link className=\"btn\" style={customButton}\r\n                            to={'/products'}>Products</Link>\r\n\r\n                        <Link className=\"btn\" style={customButton}\r\n                            to={'/history'}>History</Link>\r\n\r\n                        <div className=\"btn log-out\" onClick={signOut}>Log out</div>\r\n                    </>\r\n                    :\r\n                    <div style={{userSelect:'none'}}>Free version</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst NavigationBar = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to={'/'}>Menu</Link>\r\n            <Link to={'/new-invoice'}>New Invoice</Link>\r\n            <Link to={'/profile'}>My Profile</Link>\r\n            <Link to={'/companies'}>My Companies</Link>\r\n            <Link to={'/clients'}>Clients</Link>\r\n            <Link to={'/products'}>Products</Link>\r\n            <Link to={'/history'}>History</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n","\r\nconst ProdDisplay = ({ items, valTVA, delProd }) => {\r\n    const frmt = new Intl.NumberFormat('en-US');\r\n\r\n    const getTotal = () => {\r\n        let total = 0;\r\n        items.map(item => total+= (parseFloat(item.val) + parseFloat(item.tva)))\r\n        return frmt.format(total)\r\n    }\r\n\r\n    return (\r\n        <table className=\"table-item-preview\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Nr. crt</th>\r\n                    <th>Denumirea produselor sau a serviciilor</th>\r\n                    <th>U.M.</th>\r\n                    <th>Cantitate</th>\r\n                    <th>Preț unitar</th>\r\n                    <th>Valoare lei</th>\r\n                    {valTVA > 0 && <th>Valoare TVA</th>}\r\n                </tr>\r\n                {items.map((item, i) => {\r\n                    return (\r\n                        <tr key={i}>\r\n                            <td>{i+1}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.um}</td>\r\n                            <td>{frmt.format(parseFloat(item.qt))}</td>\r\n                            <td>{frmt.format(parseFloat(item.unitPrice))}</td>\r\n                            <td>{frmt.format(parseFloat(item.val))}</td>\r\n                            {valTVA > 0 && <td>{frmt.format(parseFloat(item.tva))}</td>}\r\n                            <td><span title=\"delete entry\" onClick={() => delProd(i)}\r\n                            style={{color:'red', fontWeight:'bolder', cursor:'pointer'}}>X</span>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                <tr>\r\n                    <td colSpan={5}>TOTAL:</td>\r\n                    <td colSpan={valTVA > 0 ? 2 : 1}>{getTotal()}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ProdDisplay\r\n","import { useState, useEffect } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport ProdDisplay from \"./ProdDisplay\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\n\r\nconst NewInvoice = ({ generateInvoice }) => {\r\n\r\n    const { userCompanies,\r\n        getCompanies,\r\n        currentUser,\r\n        clients,\r\n        getClients,\r\n        newInvoice,\r\n        getLastInvoice,\r\n        lastInvoiceData,\r\n        products,\r\n        getProducts,\r\n    } = useAuth();\r\n\r\n    useEffect(() => {\r\n        getCompanies(currentUser.uid)\r\n        getClients(currentUser.uid)\r\n        getProducts(currentUser.uid)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    let history = useHistory();\r\n    //form states\r\n    //invoice data\r\n    const [invoiceDate, setInvoiceDate] = useState('');\r\n    const [invoiceTerm, setInvoiceTerm] = useState(15);\r\n    const [invoiceSeries, setInvoiceSeries] = useState('');\r\n    const [invoiceNr, setInvoiceNr] = useState('');\r\n    //delegat\r\n    const [delName, setDelName] = useState('');\r\n    const [delCNP, setDelCNP] = useState('');\r\n    const [delSeries, setDelSeries] = useState('');\r\n    const [transport, setTransport] = useState('');\r\n    //your company\r\n    const [compAuto, setCompAuto] = useState('');\r\n\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyCIF, setCompanyCIF] = useState('');\r\n    const [companyRegCom, setCompanyRegCom] = useState('');\r\n    const [companyAdresa, setCompanyAdresa] = useState('');\r\n    const [companyCapSocial, setCompanyCapSocial] = useState(0);\r\n    const [companyCont, setCompanyCont] = useState('');\r\n    const [companyBank, setCompanyBank] = useState('');\r\n    const [companyTelefon, setCompanyTelefon] = useState('');\r\n    const [companyTVA, setCompanyTVA] = useState(19);\r\n    const [companyTVApay, setCompanyTVApay] = useState(true);\r\n    const [companyLogo, setCompanyLogo] = useState('');\r\n    const [companyErrors, setCompanyErrors] = useState([{\r\n        cif: false,\r\n        regCom: false,\r\n        cont: false,\r\n        telefon: false,\r\n    }]);\r\n    //your client\r\n    const [clientName, setClientName] = useState('');\r\n    const [clientCIF, setClientCIF] = useState('');\r\n    const [clientRegCom, setClientRegCom] = useState('');\r\n    const [clientAdresa, setClientAdresa] = useState('');\r\n    const [clientCont, setClientCont] = useState('');\r\n    const [clientBank, setClientBank] = useState('');\r\n    const [clientErrors, setClientErrors] = useState([{\r\n        cif: false,\r\n        regCom: false,\r\n        cont: false,\r\n        telefon: false,\r\n    }]);\r\n    //products/services\r\n    const [prodDescr, setProdDescr] = useState('');\r\n    const [prodUM, setProdUM] = useState('');\r\n    const [prodQty, setProdQty] = useState(1);\r\n    const [prodUnitPrice, setProdUnitPrice] = useState(0);\r\n    const [prodTotal, setProdTotal] = useState(0);\r\n    const [prodTVA, setProdTVA] = useState(0);\r\n    const [items, setItems] = useState([]);\r\n    //load\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //functions\r\n    //INVOICE GENERATOR\r\n    const updateData = async () => {\r\n        setLoading(true);\r\n        \r\n        return await new Promise(resolve => setTimeout(() => { resolve(setLoading(false)) }, 2000))\r\n            .then(() => {\r\n                const finalData = {\r\n                    invoiceDate: invoiceDate,\r\n                    invoiceTerm: invoiceTerm,\r\n                    invoiceSeries: returnInvoiceSeries(),\r\n                    invoiceNr: returnInvoiceNr(),\r\n                    delName: delName,\r\n                    delCNP: delCNP,\r\n                    delSeries: delSeries,\r\n                    transport: transport,\r\n                    companyName: companyName,\r\n                    companyCIF: companyCIF,\r\n                    companyRegCom: companyRegCom,\r\n                    companyAdresa: companyAdresa,\r\n                    companyCapSocial: companyCapSocial,\r\n                    companyCont: companyCont,\r\n                    companyBank: companyBank,\r\n                    companyTelefon: companyTelefon,\r\n                    companyTVA: companyTVA,\r\n                    companyTVApay: companyTVApay,\r\n                    companyLogo: companyLogo,\r\n                    clientName: clientName,\r\n                    clientCIF: clientCIF,\r\n                    clientRegCom: clientRegCom,\r\n                    clientAdresa: clientAdresa,\r\n                    clientCont: clientCont,\r\n                    clientBank: clientBank,\r\n                    items: items\r\n                }\r\n                generateInvoice(finalData);\r\n                newInvoice(finalData);\r\n                history.push(\"/generated-invoice\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const updateCompanyTVA = (e) => {\r\n        e >= 0 ? setCompanyTVA(e) : setCompanyTVA(0);\r\n    }\r\n\r\n    const updateCompanyLogo = (e) => {\r\n        setCompanyLogo('');\r\n        if(e) setCompanyLogo(URL.createObjectURL(e));\r\n    }\r\n\r\n    const checkCIF = e => {\r\n        //check validity of CIF\r\n        let vNr = 753217532;\r\n        let cifNr = parseInt(e.replace('RO', ''));\r\n        let c1 = cifNr % 10;\r\n        cifNr = Math.floor(cifNr / 10);\r\n        let t = 0;\r\n        while (cifNr > 0) {\r\n            t += (cifNr % 10) * (vNr % 10);\r\n            cifNr = Math.floor(cifNr / 10);\r\n            vNr = Math.floor(vNr / 10);\r\n        }\r\n        //modulo 11\r\n        let c2 = t * 10 % 11;\r\n        if (c2 === 10) c2 = 0;\r\n        return (c1 === c2);\r\n    }\r\n\r\n    const checkIban = e => {\r\n        const pattern = /^(?:(?:IT|SM)\\d{2}[A-Z]\\d{22}|CY\\d{2}[A-Z]\\d{23}|NL\\d{2}[A-Z]{4}\\d{10}|LV\\d{2}[A-Z]{4}\\d{13}|(?:BG|BH|GB|IE)\\d{2}[A-Z]{4}\\d{14}|GI\\d{2}[A-Z]{4}\\d{15}|RO\\d{2}[A-Z]{4}\\d{16}|KW\\d{2}[A-Z]{4}\\d{22}|MT\\d{2}[A-Z]{4}\\d{23}|NO\\d{13}|(?:DK|FI|GL|FO)\\d{16}|MK\\d{17}|(?:AT|EE|KZ|LU|XK)\\d{18}|(?:BA|HR|LI|CH|CR)\\d{19}|(?:GE|DE|LT|ME|RS)\\d{20}|IL\\d{21}|(?:AD|CZ|ES|MD|SA)\\d{22}|PT\\d{23}|(?:BE|IS)\\d{24}|(?:FR|MR|MC)\\d{25}|(?:AL|DO|LB|PL)\\d{26}|(?:AZ|HU)\\d{27}|(?:GR|MU)\\d{28})$/i\r\n        return pattern.test(e);\r\n    }\r\n\r\n    const checkRegCom = e => {\r\n        const pattern = new RegExp('([J][0-9]{2})/([0-9]{4})/([0-9]{4})');\r\n        return pattern.test(e);\r\n    }\r\n\r\n    const updateCompanyCIF = (e, client) => {\r\n        !client ? setCompanyCIF(e) : setClientCIF(e);\r\n        if (e.length === 0) {\r\n            !client ? setCompanyErrors(prev => [{ ...prev, cif: false }]) : \r\n            setClientErrors(prev => [{ ...prev, cif: false }]);\r\n            return null;\r\n        }\r\n        else if (e.length < 2 || e.length > 10 || !e.includes('RO')){\r\n            !client ? setCompanyErrors(prev => [{ ...prev, cif: true }]) : \r\n            setClientErrors(prev => [{ ...prev, cif: true }]);\r\n            return null;\r\n        }\r\n        //check validity of CIF\r\n        if (checkCIF(e)){\r\n            !client ? setCompanyErrors(prev => [{ ...prev, cif: false }]) : \r\n            setClientErrors(prev => [{ ...prev, cif: false }]);\r\n            return null\r\n        }\r\n        !client ? setCompanyErrors(prev => [{ ...prev, cif: true }]) : \r\n        setClientErrors(prev => [{ ...prev, cif: true }]);\r\n    }\r\n\r\n    const updateCompanyRegCom = (e, client) => {\r\n        !client ? setCompanyRegCom(e) : setClientRegCom(e);\r\n\r\n        if (e.length === 0){ \r\n            !client ? setCompanyErrors(prev => [{ ...prev, regCom: false }]) : \r\n            setClientErrors(prev => [{ ...prev, regCom: false }])\r\n            return null;\r\n        }\r\n        if (e.length < 13){\r\n            !client ? setCompanyErrors(prev => [{ ...prev, regCom: true }]) : \r\n            setClientErrors(prev => [{ ...prev, regCom: true }])\r\n            return null;\r\n        }\r\n        if (e.length === 13 && checkRegCom(e)){\r\n            !client ? setCompanyErrors(prev => [{ ...prev, regCom: false }]) : \r\n            setClientErrors(prev => [{ ...prev, regCom: false }])\r\n            return null;\r\n        }\r\n        !client ? setCompanyErrors(prev => [{ ...prev, regCom: true }]) : \r\n        setClientErrors(prev => [{ ...prev, regCom: true }])\r\n    }\r\n\r\n    const updateCompanyCont = (e, client) => {\r\n        !client ? setCompanyCont(e) : setClientCont(e);\r\n        if (e.length === 0){ \r\n            !client ? setCompanyErrors(prev => [{ ...prev, cont: false }]) : \r\n            setClientErrors(prev => [{ ...prev, cont: false }])\r\n            return null;\r\n        }\r\n        if (checkIban(e)){\r\n            !client ? setCompanyErrors(prev => [{ ...prev, cont: false }]) : \r\n            setClientErrors(prev => [{ ...prev, cont: false }])\r\n            return null;\r\n        }\r\n        !client ? setCompanyErrors(prev => [{ ...prev, cont: true }]) : \r\n        setClientErrors(prev => [{ ...prev, cont: true }])\r\n    }\r\n\r\n    const updateProdQty = e => {\r\n        e !== '' ? setProdQty(e) : setProdQty(0);\r\n        setProdTotal((e * prodUnitPrice).toFixed(2));\r\n        const tva = ((companyTVA / 100) * (e * prodUnitPrice));\r\n        setProdTVA(tva.toFixed(2));\r\n    }\r\n\r\n    const updateProdUnitPrice = e => {\r\n        e !== '' ? setProdUnitPrice(e) : setProdUnitPrice(0);\r\n        setProdTotal((e * prodQty).toFixed(2));\r\n        const tva = ((companyTVA / 100) * (e * prodQty));\r\n        setProdTVA(tva.toFixed(2));\r\n    }\r\n\r\n    const addProd = e => {\r\n        e.preventDefault();\r\n        const item = {\r\n            name: prodDescr,\r\n            um: prodUM,\r\n            qt: prodQty,\r\n            unitPrice: prodUnitPrice,\r\n            val: prodTotal,\r\n            tva: prodTVA\r\n        }\r\n\r\n        setItems(prev => [...prev, item])\r\n        \r\n        setProdDescr('');\r\n        setProdUM('');\r\n        setProdQty(0);\r\n        setProdUnitPrice(0);\r\n        setProdTotal(0);\r\n        setProdTVA(0);\r\n    }\r\n\r\n    const delProd = i => {\r\n        setItems(items.filter((item, index) => {return index !== i}))\r\n    }\r\n\r\n    // const saveToLocal = () => {\r\n    //     const compData = {\r\n    //         companyName: companyName,\r\n    //         companyCIF: companyCIF,\r\n    //         companyRegCom: companyRegCom,\r\n    //         companyAdresa: companyAdresa,\r\n    //         companyCapSocial: companyCapSocial,\r\n    //         companyCont: companyCont,\r\n    //         companyBank: companyBank,\r\n    //         companyTelefon: companyTelefon,\r\n    //         companyTVA: companyTVA,\r\n    //         companyTVApay: companyTVApay,\r\n    //         companyLogo: companyLogo\r\n    //     }\r\n    //     localStorage.setItem('companyData', JSON.stringify(compData))\r\n    // }\r\n\r\n    // const loadFromLocal = () => {\r\n    //     if (localStorage.getItem('companyData') !== null){\r\n    //         const data = JSON.parse(localStorage.getItem('companyData'));\r\n\r\n    //         setCompanyName(data.companyName)\r\n    //         setCompanyCIF(data.companyCIF)\r\n    //         setCompanyRegCom(data.companyRegCom)\r\n    //         setCompanyAdresa(data.companyAdresa)\r\n    //         setCompanyCapSocial(data.companyCapSocial)\r\n    //         setCompanyCont(data.companyCont)\r\n    //         setCompanyBank(data.companyBank)\r\n    //         setCompanyTelefon(data.companyTelefon)\r\n    //         setCompanyTVA(data.companyTVA)\r\n    //         setCompanyTVApay(data.companyTVApay)\r\n    //         //data.companyLogo && setCompanyLogo(data.companyLogo)\r\n    //     }\r\n    // }\r\n\r\n    const resetCompanyData = () => {\r\n        setCompanyName('')\r\n        setCompanyCIF('')\r\n        setCompanyRegCom('')\r\n        setCompanyAdresa('')\r\n        setCompanyCapSocial(0)\r\n        setCompanyCont('')\r\n        setCompanyBank('')\r\n        setCompanyTelefon('')\r\n        setCompanyTVA(19)\r\n        setCompanyTVApay(true)\r\n        setCompanyLogo('')\r\n\r\n        setInvoiceNr('');\r\n        setInvoiceSeries('')\r\n\r\n        setDelName('')\r\n        setDelSeries('')\r\n        setDelCNP('')\r\n\r\n        setCompAuto('');\r\n    }\r\n\r\n    const resetClientData = () => {\r\n        setClientName('')\r\n        setClientCIF('')\r\n        setClientRegCom('')\r\n        setClientAdresa('')\r\n        setClientCont('')\r\n        setClientBank('')\r\n    }\r\n\r\n    const autoCompleteCompany = async (e) => {\r\n        if(e === 'del') return resetCompanyData();\r\n        else{\r\n            const compFilter = userCompanies.filter((comp) => comp.compId === e)\r\n\r\n            const currentComp = compFilter[0];\r\n\r\n            getLastInvoice(currentComp.name)\r\n\r\n            setCompanyName(currentComp.name)\r\n            setCompanyCIF(currentComp.cif)\r\n            setCompanyRegCom(currentComp.regCom)\r\n            setCompanyAdresa(currentComp.address)\r\n            setCompanyCapSocial(currentComp.capSoc)\r\n            setCompanyCont(currentComp.account)\r\n            setCompanyBank(currentComp.bank)\r\n            setCompanyTelefon(currentComp.phone)\r\n            setCompanyTVA(currentComp.tva)\r\n            setCompanyTVApay(currentComp.tvaPay)\r\n\r\n            setCompAuto(currentComp.compId);\r\n            //invoice data\r\n            currentComp.serie && setInvoiceSeries(currentComp.serie)\r\n            currentComp.term && setInvoiceTerm(currentComp.term)\r\n            currentComp.delName && setDelName(currentComp.delName)\r\n            currentComp.delCNP && setDelCNP(currentComp.delCNP)\r\n            currentComp.delCI && setDelSeries(currentComp.delCI)\r\n\r\n            setInvoiceNr('');\r\n        }\r\n    }\r\n\r\n    const returnInvoiceNr = () => {\r\n        return invoiceNr ? invoiceNr :\r\n        lastInvoiceData.invoiceNr && parseInt(lastInvoiceData.invoiceNr)+1\r\n    }\r\n\r\n    const returnInvoiceSeries = () => {\r\n        return invoiceSeries ? invoiceSeries :\r\n            lastInvoiceData.invoiceSeries\r\n    }\r\n\r\n    const autoCompleteClient = (e) => {\r\n        if (e === 'del') return resetClientData();\r\n        else {\r\n            const compFilter = clients.filter((comp) => comp.cliId === e)\r\n\r\n            const currentComp = compFilter[0];\r\n\r\n            setClientName(currentComp.name)\r\n            setClientCIF(currentComp.cif)\r\n            setClientRegCom(currentComp.regCom)\r\n            setClientAdresa(currentComp.address)\r\n            setClientCont(currentComp.account)\r\n            setClientBank(currentComp.bank)\r\n        }\r\n    }\r\n\r\n    const resetProdData = () => {\r\n        setProdDescr('')\r\n        setProdUM('')\r\n        setProdUnitPrice(0)\r\n        setProdQty(1);\r\n        updateProdUnitPrice(0)\r\n    }\r\n\r\n    const autoComplateProduct = (e) => {\r\n        if(e === 'del') return resetProdData();\r\n        else{\r\n            const prodFilter = products.filter((prod) => prod.prodId === e)\r\n\r\n            const currentProd = prodFilter[0];\r\n\r\n            setProdDescr(currentProd.name)\r\n            setProdUM(currentProd.um)\r\n            setProdUnitPrice(currentProd.price)\r\n            setProdQty(1);\r\n            updateProdUnitPrice(currentProd.price)\r\n        }\r\n    }\r\n\r\n    const productSelector = () => {\r\n        let prodFilter = products;\r\n        if(compAuto) prodFilter = products.filter((prod) => prod.compId === compAuto || prod.compId === 'any')\r\n        return(\r\n            <select className=\"invoice-input\"\r\n                onChange={(e) => autoComplateProduct(e.target.value)}>\r\n                <option value={'del'}>-</option>\r\n                {prodFilter.map((prod, i) => {\r\n                    return (\r\n                        <option key={i} value={prod.prodId}>{prod.name}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>Factură nouă</h1>\r\n            <NavigationBar />\r\n            <div className=\"main-select\">\r\n                <form>\r\n                    <h3>Your companies:</h3>\r\n                    <select className=\"invoice-input\"\r\n                        onChange={(e) => autoCompleteCompany(e.target.value)}>\r\n                        <option value={'del'}>-</option>\r\n                        {userCompanies.map((comp, i) => {\r\n                            return (\r\n                                <option key={i} value={comp.compId}>{comp.name}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <hr />\r\n                    <h2>Date factură</h2>\r\n                    <hr />\r\n                    <div className=\"form-structure\">\r\n                        <div className=\"form-labels\">\r\n                            <label>Serie:</label>\r\n                            <label>Număr:</label>\r\n                            <label>Dată:</label>\r\n                            <label>Termen plată:</label>\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <input className=\"invoice-input\" value={returnInvoiceSeries()}\r\n                                type='text' onChange={(e) => setInvoiceSeries(e.target.value)} />\r\n\r\n                            <input className=\"invoice-input\" value={returnInvoiceNr()} min={0} \r\n                                type='number' onChange={(e) => setInvoiceNr(e.target.value)} />\r\n\r\n                            <input className=\"invoice-input\" value={invoiceDate}\r\n                                type='date' onChange={(e) => setInvoiceDate(e.target.value)} />\r\n\r\n                            <input className=\"invoice-input\" value={invoiceTerm}\r\n                                type='number' placeholder=\"zile\" onChange={(e) => setInvoiceTerm(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <h3>Delegat</h3>\r\n                    <div className=\"form-structure\">\r\n                        <div className=\"form-labels\">\r\n                            <label>Nume:</label>\r\n                            <label>CNP:</label>\r\n                            <label>Serie CI:</label>\r\n                            <label>Mijloc transport:</label>\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <input className=\"invoice-input\" value={delName}\r\n                                type='text' onChange={(e) => setDelName(e.target.value)} required />\r\n                            <input className=\"invoice-input\" value={delCNP} min={0}\r\n                                type='number' onChange={(e) => setDelCNP(e.target.value)} required />\r\n                            <input className=\"invoice-input\" value={delSeries}\r\n                                type='text' onChange={(e) => setDelSeries(e.target.value)} required />\r\n                            <input className=\"invoice-input\" value={transport}\r\n                                type='text' onChange={(e) => setTransport(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"main-select\">\r\n                <form>\r\n                    <h2>Firmă</h2>\r\n                    <hr/>\r\n                    \r\n                    <div className=\"form-structure\">\r\n                        <div className=\"form-labels\">\r\n                            <label>Nume:</label>\r\n                            <label>CIF:</label>\r\n                            <label>Reg. com.:</label>\r\n                            <label>Adresa:</label>\r\n                            <label>Cap. social:</label>\r\n                            <label>Bancă:</label>\r\n                            <label>Cont:</label>\r\n                            <label>Telefon:</label>\r\n                            <label>Cotă TVA:</label>\r\n                            <label>TVA încasare:</label>\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <input className=\"invoice-input\" value={companyName}\r\n                                type='text' onChange={(e) => setCompanyName(e.target.value)} required />\r\n                            <input className={companyErrors[0].cif ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={companyCIF}\r\n                                type='text' onChange={(e) => \r\n                                updateCompanyCIF(e.target.value.toUpperCase(), false)} required />\r\n                            <input className={companyErrors[0].regCom ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={companyRegCom}\r\n                                type='text' onChange={(e) => \r\n                                updateCompanyRegCom(e.target.value.toUpperCase(), false)} required />\r\n                            <input className=\"invoice-input\" value={companyAdresa}\r\n                                type='text' onChange={(e) => setCompanyAdresa(e.target.value)} required />\r\n                            <input className=\"invoice-input\" value={companyCapSocial} min={0}\r\n                                type='number' onChange={(e) => setCompanyCapSocial(e.target.value)} />\r\n                            <input className=\"invoice-input\" value={companyBank}\r\n                                type='text' onChange={(e) => setCompanyBank(e.target.value)} />\r\n                            <input className={companyErrors[0].cont ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={companyCont}\r\n                                type='text' onChange={(e) => updateCompanyCont(e.target.value.toUpperCase(), false)} />\r\n                            <input className=\"invoice-input\" value={companyTelefon} pattern=\"[0-9]{10}\"\r\n                                type='tel' onChange={(e) => setCompanyTelefon(e.target.value)} />\r\n                            <input className=\"invoice-input\" value={companyTVA} min={0}\r\n                                type='number' onChange={(e) => updateCompanyTVA(e.target.value)} required />\r\n                            <select className=\"invoice-input\"\r\n                                value={companyTVApay} onChange={(e) => setCompanyTVApay(e.target.value)}>\r\n                                <option value={true}>DA</option>\r\n                                <option value={false}>NU</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"invoice-upload-file\" accept=\"image/*\"\r\n                        type='file' onChange={(e) => updateCompanyLogo(e.target.files[0])} />\r\n                    <br />\r\n                    {/* <div className=\"double-btn\">\r\n                        <span className=\"btn\" style={{backgroundColor:'green'}} onClick={saveToLocal}>\r\n                            Save\r\n                        </span>\r\n                        {localStorage.getItem('companyData') !== null && \r\n                            <span className=\"btn\" onClick={loadFromLocal}>Load</span>\r\n                        }\r\n                    </div> */}\r\n                </form>\r\n            </div>\r\n            {companyLogo &&\r\n                <div className=\"main-select\">\r\n                    <label>Logo preview:</label>\r\n                    <img className=\"img-preview\" src={companyLogo} alt=\"company logo\" />\r\n                    <small title=\"delete\" style={{color:'red', cursor:'pointer', textDecoration:'underline'}}\r\n                    onClick={() => setCompanyLogo('')}>\r\n                        Delete\r\n                    </small>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"main-select\">\r\n                <form>\r\n                    <h2>Client</h2>\r\n                    <hr />\r\n                    <h3>Clients:</h3>\r\n                    <select className=\"invoice-input\"\r\n                        onChange={(e) => autoCompleteClient(e.target.value)}>\r\n                        <option value={'del'}>-</option>\r\n                        {clients.map((cli, i) => {\r\n                            return (\r\n                                <option key={i} value={cli.cliId}>{cli.name}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <hr />\r\n                    <div className=\"form-structure\">\r\n                        <div className=\"form-labels\">\r\n                            <label>Nume:</label>\r\n                            <label>CIF:</label>\r\n                            <label>Reg. com.:</label>\r\n                            <label>Adresa:</label>\r\n                            <label>Bancă:</label>\r\n                            <label>Cont:</label>\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <input className=\"invoice-input\" value={clientName}\r\n                                type='text' onChange={(e) => setClientName(e.target.value)} required />\r\n                            <input className={clientErrors[0].cif ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={clientCIF}\r\n                                type='text' onChange={(e) => \r\n                                updateCompanyCIF(e.target.value.toUpperCase(), true)} required />\r\n                            <input className={clientErrors[0].regCom ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={clientRegCom}\r\n                                type='text' onChange={(e) => \r\n                                updateCompanyRegCom(e.target.value.toUpperCase(), true)} required />\r\n                            <input className=\"invoice-input\" value={clientAdresa}\r\n                                type='text' onChange={(e) => setClientAdresa(e.target.value)} required />\r\n                            <input className=\"invoice-input\" value={clientBank}\r\n                                type='text' onChange={(e) => setClientBank(e.target.value)} />\r\n                            <input className={clientErrors[0].cont ? \"invoice-input-error\" : \"invoice-input\"}\r\n                                value={clientCont}\r\n                                type='text' onChange={(e) => updateCompanyCont(e.target.value.toUpperCase(), true)} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"main-select\">\r\n                <form onSubmit={addProd}>\r\n                    <h2>Produse / Servicii</h2>\r\n                    <hr />\r\n\r\n                    <h3>Your products/services:</h3>\r\n                    {productSelector()}\r\n\r\n                    <hr />\r\n                    <div className=\"form-structure\">\r\n                        <div className=\"form-labels\">\r\n                            <label>Denumire:</label>\r\n                            <label>UM:</label>\r\n                            <label>Cantitate:</label>\r\n                            <label>Preț unitar:</label>\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <input className=\"invoice-input\" type='text'\r\n                                value={prodDescr} onChange={(e) => setProdDescr(e.target.value)} required />\r\n                            <input className=\"invoice-input\" type='text'\r\n                                value={prodUM} onChange={(e) => setProdUM(e.target.value)} required />\r\n                            <input className=\"invoice-input\" type='number' min={0}\r\n                                value={prodQty} onChange={(e) => updateProdQty(e.target.value)} required />\r\n                            <input className=\"invoice-input\" type='number' placeholder=\"lei\" step=\"0.01\" min={0}\r\n                                value={prodUnitPrice} onChange={(e) => \r\n                                updateProdUnitPrice(e.target.value)} required />\r\n                        </div>\r\n                    </div>\r\n                    <div>Valoare: {prodTotal}lei</div>\r\n                    <br />\r\n                    {companyTVA > 0 && <div>Valoare TVA: {prodTVA}lei</div>}\r\n                    <br />\r\n                    <input type='submit' value='Add' className=\"btn\" />\r\n                </form>\r\n                {items.length > 0 && <ProdDisplay items={items} valTVA={companyTVA} delProd={delProd} />}\r\n            </div>\r\n\r\n            {!loading ? \r\n            <>\r\n                <Link to={'/'} className=\"btn btn-close-hide btn-left\" >X</Link>\r\n                <span title=\"Generate\"\r\n                    style={{ position: 'fixed', bottom: '1%', right: '10px', }}\r\n                    className=\"btn btn-right\" onClick={updateData}\r\n                    >Next\r\n                </span>\r\n            </>\r\n            :<div id=\"overlay\"><div className=\"spinner\"></div></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewInvoice\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\n\r\nconst Login = () => {\r\n\r\n    const [mail, setMail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    //const [error, setError] = useState('');\r\n\r\n    const { login, error, resetPassword, dbLoading } = useAuth()\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        login(mail, pass);\r\n    }\r\n\r\n    const sendPasswordResetEmail = async () => {\r\n        resetPassword(mail);\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>Log in</h1>\r\n            <div className=\"main-select\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h4 style={{color:'red'}}>{error}</h4>\r\n                    <h2>Email</h2>\r\n                    <input type='email' name=\"email\" className=\"user-input\" autoComplete=\"on\"\r\n                        value={mail} onChange={(e) => setMail(e.target.value)} required />\r\n                    <h2>Password</h2>\r\n                    <input type='password' name=\"password\" className=\"user-input\" autoComplete=\"on\" \r\n                        value={pass} onChange={(e) => setPass(e.target.value)} required/>\r\n                    <br />\r\n                    {!dbLoading && <input className=\"btn\" type='submit' value='Log in' />}\r\n                </form>\r\n                <Link to={'/register'}>No account? Register</Link>\r\n                {mail && <div className=\"btn\" onClick={sendPasswordResetEmail}>Forgot password?</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\n\r\nconst Register = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [mail, setMail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [pass, setPass] = useState('');\r\n\r\n    const { signup, error, dbLoading } = useAuth()\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        signup(name, mail, phone, pass);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>Register</h1>\r\n            <div className=\"main-select\">\r\n                <form onSubmit={handleRegister}>\r\n                    <h4 style={{ color: 'red' }}>{error}</h4>\r\n                    <h2>Email</h2>\r\n                    <input type='email' name=\"email\" className=\"user-input\" autoComplete=\"on\"\r\n                        value={mail} onChange={(e) => setMail(e.target.value)} required />\r\n                    <h2>Name</h2>\r\n                    <input type='text' name=\"name\" className=\"user-input\" autoComplete=\"on\"\r\n                        value={name} onChange={(e) => setName(e.target.value)} required />\r\n                    <h2>Phone</h2>\r\n                    <input type='tel' name=\"tel\" className=\"user-input\" autoComplete=\"on\"\r\n                        value={phone} onChange={(e) => setPhone(e.target.value)} required />\r\n                    <h2>Password</h2>\r\n                    <input type='password' name=\"password\" className=\"user-input\" autoComplete=\"on\"\r\n                        value={pass} onChange={(e) => setPass(e.target.value)} required />\r\n                    <br />\r\n                    {!dbLoading && <input className=\"btn\" type='submit' value='Register' />}\r\n                </form>\r\n                <Link to={'/login'}>Log in?</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst MyCompanies = () => {\r\n    const history = useHistory(); \r\n\r\n    const { userCompanies, \r\n        newCompany, \r\n        getCompanies, \r\n        currentUser, \r\n        updateCompany, \r\n        deleteCompany\r\n    } = useAuth();\r\n\r\n    const [addNew, setAddNew] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n    //company form\r\n    const [companyId, setCompanyId] = useState('')\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyCIF, setCompanyCIF] = useState('');\r\n    const [companyRegCom, setCompanyRegCom] = useState('');\r\n    const [companyAdresa, setCompanyAdresa] = useState('');\r\n    const [companyCapSocial, setCompanyCapSocial] = useState(0);\r\n    const [companyCont, setCompanyCont] = useState('');\r\n    const [companyBank, setCompanyBank] = useState('');\r\n    const [companyTelefon, setCompanyTelefon] = useState('');\r\n    const [companyTVA, setCompanyTVA] = useState(19);\r\n    const [companyTVApay, setCompanyTVApay] = useState(true);\r\n    const [companyLogo, setCompanyLogo] = useState('');\r\n    const [invoiceTerm, setInvoiceTerm] = useState(15);\r\n    const [invoiceSeries, setInvoiceSeries] = useState('');\r\n    const [invoiceNr, setInvoiceNr] = useState('');\r\n\r\n    const [delName, setDelName] = useState('');\r\n    const [delCNP, setDelCNP] = useState('');\r\n    const [delSeries, setDelSeries] = useState('');\r\n\r\n    useEffect(() => {\r\n        getCompanies(currentUser.uid)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    // const updateLogo = (e) => {\r\n    //     setCompanyLogo('');\r\n    //     if (e) setCompanyLogo(URL.createObjectURL(e));\r\n    // }\r\n\r\n    const newComp = (e) => {\r\n        e.preventDefault();\r\n        if(update) {\r\n            updateCompany(companyId, companyName, companyCIF, companyRegCom, companyAdresa,\r\n                companyCapSocial, companyBank, companyCont,\r\n                companyTelefon, companyTVA, companyTVApay, companyLogo,\r\n                invoiceSeries, invoiceNr, invoiceTerm, \r\n                delName, delSeries, delCNP)\r\n            setAddNew(false)\r\n            resetValues();\r\n            getCompanies(currentUser.uid)\r\n            setUpdate(false)\r\n        }\r\n        else {\r\n            newCompany(companyName, companyCIF, companyRegCom, companyAdresa, \r\n                companyCapSocial, companyBank, companyCont,\r\n                companyTelefon, companyTVA, companyTVApay, companyLogo,\r\n                invoiceSeries, invoiceNr, invoiceTerm,\r\n                delName, delSeries, delCNP)\r\n            setAddNew(false)\r\n            resetValues();\r\n            getCompanies(currentUser.uid)\r\n        }\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setCompanyName('')\r\n        setCompanyCIF('')\r\n        setCompanyRegCom('')\r\n        setCompanyAdresa('')\r\n        setCompanyCapSocial(0)\r\n        setCompanyCont('')\r\n        setCompanyBank('')\r\n        setCompanyTelefon('')\r\n        setCompanyTVA(19)\r\n        setCompanyTVApay(true)\r\n        setCompanyLogo('')\r\n        setInvoiceSeries('')\r\n        setInvoiceNr('')\r\n        setInvoiceTerm(15)\r\n        setDelName('')\r\n        setDelSeries('')\r\n        setDelCNP('')\r\n    }\r\n\r\n    const editComp = (id) => {\r\n        const compFilter = userCompanies.filter((comp) => comp.compId === id)\r\n\r\n        const currentComp = compFilter[0];\r\n\r\n        setCompanyId(currentComp.compId)\r\n        setCompanyName(currentComp.name)\r\n        setCompanyCIF(currentComp.cif)\r\n        setCompanyRegCom(currentComp.regCom)\r\n        setCompanyAdresa(currentComp.address)\r\n        setCompanyCapSocial(currentComp.capSoc)\r\n        setCompanyCont(currentComp.account)\r\n        setCompanyBank(currentComp.bank)\r\n        setCompanyTelefon(currentComp.phone)\r\n        setCompanyTVA(currentComp.tva)\r\n        setCompanyTVApay(currentComp.tvaPay)\r\n        setCompanyLogo(currentComp.logo)\r\n        setInvoiceSeries(currentComp.serie)\r\n        setInvoiceNr(currentComp.nrStart)\r\n        setInvoiceTerm(currentComp.term)\r\n        setDelName(currentComp.delName)\r\n        setDelSeries(currentComp.delCI)\r\n        setDelCNP(currentComp.delCNP)\r\n        setUpdate(true)\r\n        setAddNew(true)\r\n    }\r\n\r\n    const toggleForm = () => {\r\n        if (currentUser.emailVerified){\r\n            setAddNew(!addNew)\r\n            addNew && resetValues();\r\n            setUpdate(false)\r\n        }\r\n        else{\r\n            const ask = window.confirm('Verify email to create a company');\r\n            if (ask) {\r\n                history.push('/profile')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteCom = (id) => {\r\n        deleteCompany(id);\r\n        getCompanies(currentUser.uid)\r\n    }\r\n\r\n    const editField = (id) => {\r\n        return(\r\n            <>\r\n                <span title=\"edit\" onClick={() => editComp(id)}\r\n                style={{padding:'5px'}} className=\"btn\">✏️</span>\r\n\r\n                <span title=\"delete\" onClick={() => deleteCom(id)}\r\n                style={{cursor:'pointer'}}>❌</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>My Companies</h1>\r\n            <NavigationBar />\r\n            <div className=\"main-select\">\r\n                { userCompanies.length > 0 ?\r\n                    <table className=\"table-item-preview\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Nr.</th>\r\n                                <th>Name</th>\r\n                                <th>Address</th>\r\n                                <th>CIF</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            {\r\n                                userCompanies.map((comp, i) => {\r\n                                    return(\r\n                                        <tr key={i}>\r\n                                            <td>\r\n                                                {i + 1}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.address}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.cif}\r\n                                            </td>\r\n                                            <td>\r\n                                                {editField(comp.compId)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                :\r\n                    <div>No companies.. \r\n                        <span onClick={() => toggleForm()} \r\n                        style={{textDecoration:'underline', cursor:'pointer', userSelect:'none'}}>\r\n                            add one\r\n                        </span>\r\n                    </div>\r\n                }\r\n                \r\n                <div className=\"btn\" onClick={() => toggleForm()}>Add new company</div>\r\n\r\n            </div>\r\n\r\n            {addNew &&\r\n                <div className=\"main-select\">\r\n                    <form onSubmit={newComp}>\r\n                        {!update ? <h2>New company</h2> : <h2>{companyName}</h2>}\r\n                        <div className=\"form-structure\">\r\n                            <div className=\"form-labels\">\r\n                                <label>Nume:</label>\r\n                                <label>CIF:</label>\r\n                                <label>Reg. com.:</label>\r\n                                <label>Adresa:</label>\r\n                                <label>Cap. social:</label>\r\n                                <label>Bancă:</label>\r\n                                <label>Cont:</label>\r\n                                <label>Telefon:</label>\r\n                                <label>Cotă TVA:</label>\r\n                                <label>TVA încasare:</label>\r\n                                <label>Serie facturi:</label>\r\n                                <label>Nr început:</label>\r\n                                <label>Termen plată:</label>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <input className=\"invoice-input\" value={companyName}\r\n                                    type='text' onChange={(e) => setCompanyName(e.target.value)} required />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyCIF}\r\n                                    type='text' onChange={(e) =>\r\n                                        setCompanyCIF(e.target.value.toUpperCase())} required />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyRegCom}\r\n                                    type='text' onChange={(e) =>\r\n                                        setCompanyRegCom(e.target.value.toUpperCase())} required />\r\n                                <input className=\"invoice-input\" value={companyAdresa}\r\n                                    type='text' onChange={(e) => setCompanyAdresa(e.target.value)} required />\r\n                                <input className=\"invoice-input\" value={companyCapSocial} min={0}\r\n                                    type='number' onChange={(e) => setCompanyCapSocial(e.target.value)} />\r\n                                <input className=\"invoice-input\" value={companyBank}\r\n                                    type='text' onChange={(e) => setCompanyBank(e.target.value)} />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyCont}\r\n                                    type='text' onChange={(e) => \r\n                                    setCompanyCont(e.target.value.toUpperCase())} />\r\n                                <input className=\"invoice-input\" value={companyTelefon} pattern=\"[0-9]{10}\"\r\n                                    type='tel' onChange={(e) => setCompanyTelefon(e.target.value)} />\r\n                                <input className=\"invoice-input\" value={companyTVA} min={0}\r\n                                    type='number' onChange={(e) => setCompanyTVA(e.target.value)} required />\r\n                                <select className=\"invoice-input\"\r\n                                    value={companyTVApay} onChange={(e) => setCompanyTVApay(e.target.value)}>\r\n                                    <option value={true}>DA</option>\r\n                                    <option value={false}>NU</option>\r\n                                </select>\r\n                                {/* TO DO FROM SERIE */}\r\n                                <input className=\"invoice-input\" value={invoiceSeries}\r\n                                    type='text' onChange={(e) => setInvoiceSeries(e.target.value)} required />\r\n                                <input className=\"invoice-input\" value={invoiceNr} min={0}\r\n                                    type='number' onChange={(e) => setInvoiceNr(e.target.value)} required/>\r\n                                <input className=\"invoice-input\" value={invoiceTerm} min={0}\r\n                                    type='number' onChange={(e) => setInvoiceTerm(e.target.value)} required/>\r\n                            </div>\r\n                        </div>\r\n                        <h4>Delegat</h4>\r\n                        <div className=\"form-structure\">\r\n                            <div className=\"form-labels\">\r\n                                <label>Nume:</label>\r\n                                <label>Serie CI:</label>\r\n                                <label>CNP:</label>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <input className=\"invoice-input\" value={delName}\r\n                                    type='text' onChange={(e) => setDelName(e.target.value)} />\r\n                                <input className=\"invoice-input\" value={delSeries}\r\n                                    type='text' onChange={(e) => setDelSeries(e.target.value)} />\r\n                                <input className=\"invoice-input\" value={delCNP}\r\n                                    type='text' onChange={(e) => setDelCNP(e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        {/* <input className=\"invoice-upload-file\" accept=\"image/*\"\r\n                            type='file' onChange={(e) =>\r\n                                updateLogo(e.target.files[0])} /> */}\r\n                        <br />\r\n                        {!update ?\r\n                        <input style={{marginTop:'20px'}} className=\"btn\" type='submit' value='Add company' />\r\n                        :\r\n                        <input style={{ marginTop: '20px' }} className=\"btn\" type='submit' value='Update company' />\r\n                        }\r\n                    </form>\r\n                    {/* {companyLogo && <img className=\"img-preview\" src={companyLogo} alt=\"company logo\" />} */}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCompanies\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst MyProfile = () => {\r\n    const frmt = new Intl.NumberFormat('en-US');\r\n\r\n    const { currentUser, \r\n        userCompanies,\r\n        clients, \r\n        verifyEmail, \r\n        updateProfile, \r\n        getCompanies,\r\n        getClients,\r\n        getInvoices,\r\n        invoices,\r\n        invoicesEarnings\r\n    } = useAuth();\r\n\r\n    const [info, setInfo] = useState(false);\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    const [name, setName] = useState(currentUser.displayName)\r\n    const [email, setEmail] = useState(currentUser.email)\r\n    const [phone, setPhone] = useState(currentUser.phoneNumber)\r\n    \r\n    useEffect(() => {\r\n        getCompanies(currentUser.uid)\r\n        getClients(currentUser.uid)\r\n        getInvoices(currentUser.uid)\r\n        //getTotalEarnings()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const handleUpdateProfile = (e) => {\r\n        e.preventDefault();\r\n        updateProfile(name, email, phone)\r\n        setEdit(false)\r\n    }\r\n\r\n    const userInfo = () => {\r\n        if(edit){\r\n            return(\r\n                <form onSubmit={handleUpdateProfile}>\r\n                    <h3>Name: \r\n                        <input style={{fontSize:'1.5em', textAlign:'center'}} \r\n                            type='text' name='name' required\r\n                            value={name} onChange={(e) => setName(e.target.value)}/>\r\n                    </h3>\r\n                    <h3>Email:\r\n                        <input style={{ fontSize: '1.5em', textAlign: 'center' }}\r\n                            type='email' name='email' required\r\n                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    </h3>\r\n                    <h3>Phone:\r\n                        <input style={{ fontSize: '1.5em', textAlign: 'center' }}\r\n                            type='tel' name='tel' required\r\n                            value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n                    </h3>\r\n                    <input className=\"btn\" type='submit' value='Save' />\r\n                    <br />\r\n                    <div onClick={() => setEdit(false)} style={{marginTop:'15px'}} \r\n                    className=\"btn log-out\">Cancel</div>\r\n                </form>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <h3>Name: <span style={{ fontSize: '1.5em' }}>{currentUser.displayName}</span></h3>\r\n                    <h3>Email: <span style={{ fontSize: '1.5em' }}>{currentUser.email}</span></h3>\r\n                    <h3>Phone: <span style={{ fontSize: '1.5em' }}>{currentUser.phoneNumber}</span></h3>\r\n                    <div onClick={() => setEdit(true)} className=\"btn\">Edit</div>\r\n                    <br />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            {currentUser ? \r\n                <h2 style={{ paddingTop: '5%', fontSize: '50px' }}>{currentUser.displayName}'s profile</h2>\r\n                : <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>Profile</h1>}\r\n            <NavigationBar />\r\n            <div className=\"main-select\">\r\n                <div onClick={() => setInfo(!info)} className=\"btn\">\r\n                    User info\r\n                </div>\r\n\r\n                {info && \r\n                    <div style={{ border: '1px solid rgb(41, 41, 41)', \r\n                    padding:'20px', \r\n                    textAlign:'center',\r\n                    borderRadius:'15px'}}>\r\n                        {userInfo()}\r\n                        <small>Created: {currentUser.metadata.creationTime}</small>\r\n                    </div>\r\n                }\r\n\r\n                {!currentUser.emailVerified && \r\n                <div className=\"btn log-out\" onClick={() => verifyEmail(currentUser.email)}>VERIFY EMAIL</div>}\r\n\r\n                <table className=\"table-item-preview\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Companies</th>\r\n                            <th>Clients</th>\r\n                            <th>Invoices generated</th>\r\n                            <th>Earnings</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{userCompanies.length}</td>\r\n                            <td>{clients.length}</td>\r\n                            <td>{invoices.length}</td>\r\n                            <td>{frmt.format(invoicesEarnings)} lei</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Clients = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { clients,\r\n        newClient,\r\n        getClients,\r\n        currentUser,\r\n        updateClient,\r\n        deleteClient\r\n    } = useAuth();\r\n\r\n    const [addNew, setAddNew] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    //client company form\r\n    const [companyId, setCompanyId] = useState('')\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyCIF, setCompanyCIF] = useState('');\r\n    const [companyRegCom, setCompanyRegCom] = useState('');\r\n    const [companyAdresa, setCompanyAdresa] = useState('');\r\n    const [companyCont, setCompanyCont] = useState('');\r\n    const [companyBank, setCompanyBank] = useState('');\r\n\r\n    useEffect(() => {\r\n        getClients(currentUser.uid)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const newClientHandle = (e) => {\r\n        e.preventDefault();\r\n        if (update) {\r\n            updateClient(companyId, companyName, companyCIF, companyRegCom, companyAdresa,\r\n                companyBank, companyCont)\r\n            setAddNew(false)\r\n            resetValues();\r\n            getClients(currentUser.uid)\r\n            setUpdate(false)\r\n        }\r\n        else {\r\n            newClient(companyName, companyCIF, companyRegCom, companyAdresa,\r\n                companyBank, companyCont)\r\n            setAddNew(false)\r\n            resetValues();\r\n            getClients(currentUser.uid)\r\n        }\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setCompanyName('')\r\n        setCompanyCIF('')\r\n        setCompanyRegCom('')\r\n        setCompanyAdresa('')\r\n        setCompanyCont('')\r\n        setCompanyBank('')\r\n    }\r\n\r\n    const editClientHandle = (id) => {\r\n        const compFilter = clients.filter((comp) => comp.cliId === id)\r\n\r\n        const currentComp = compFilter[0];\r\n\r\n        setCompanyId(currentComp.cliId)\r\n        setCompanyName(currentComp.name)\r\n        setCompanyCIF(currentComp.cif)\r\n        setCompanyRegCom(currentComp.regCom)\r\n        setCompanyAdresa(currentComp.address)\r\n        setCompanyCont(currentComp.account)\r\n        setCompanyBank(currentComp.bank)\r\n        setUpdate(true)\r\n        setAddNew(true)\r\n    }\r\n\r\n    const toggleForm = () => {\r\n        if (currentUser.emailVerified) {\r\n            setAddNew(!addNew)\r\n            addNew && resetValues();\r\n            setUpdate(false)\r\n        }\r\n        else {\r\n            const ask = window.confirm('Verify email to add a client');\r\n            if (ask) {\r\n                history.push('/profile')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteClientHandle = (id) => {\r\n        deleteClient(id);\r\n        getClients(currentUser.uid)\r\n    }\r\n\r\n    const editField = (id) => {\r\n        return (\r\n            <>\r\n                <span title=\"edit\" onClick={() => editClientHandle(id)}\r\n                    style={{ padding: '5px' }} className=\"btn\">✏️</span>\r\n\r\n                <span title=\"delete\" onClick={() => deleteClientHandle(id)}\r\n                    style={{ cursor: 'pointer' }}>❌</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>Clients</h1>\r\n            <NavigationBar />\r\n            <div className=\"main-select\">\r\n                {clients.length > 0 ?\r\n                    <table className=\"table-item-preview\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Nr.</th>\r\n                                <th>Name</th>\r\n                                <th>Address</th>\r\n                                <th>CIF</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            {\r\n                                clients.map((comp, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td>\r\n                                                {i + 1}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.address}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.cif}\r\n                                            </td>\r\n                                            <td>\r\n                                                {editField(comp.cliId)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <div>No clients..\r\n                        <span onClick={() => toggleForm()}\r\n                            style={{ textDecoration: 'underline', cursor: 'pointer', userSelect: 'none' }}>\r\n                            add one\r\n                        </span>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"btn\" onClick={() => toggleForm()}>Add new client</div>\r\n            </div>\r\n            {addNew &&\r\n                <div className=\"main-select\">\r\n                    <form onSubmit={newClientHandle}>\r\n                        {!update ? <h2>New client</h2> : <h2>{companyName}</h2>}\r\n                        <div className=\"form-structure\">\r\n                            <div className=\"form-labels\">\r\n                                <label>Nume:</label>\r\n                                <label>CIF:</label>\r\n                                <label>Reg. com.:</label>\r\n                                <label>Adresa:</label>\r\n                                <label>Bancă:</label>\r\n                                <label>Cont:</label>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <input className=\"invoice-input\" value={companyName}\r\n                                    type='text' onChange={(e) => setCompanyName(e.target.value)} required />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyCIF}\r\n                                    type='text' onChange={(e) =>\r\n                                        setCompanyCIF(e.target.value.toUpperCase())} required />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyRegCom}\r\n                                    type='text' onChange={(e) =>\r\n                                        setCompanyRegCom(e.target.value.toUpperCase())} required />\r\n                                <input className=\"invoice-input\" value={companyAdresa}\r\n                                    type='text' onChange={(e) => setCompanyAdresa(e.target.value)} required />\r\n                                <input className=\"invoice-input\" value={companyBank}\r\n                                    type='text' onChange={(e) => setCompanyBank(e.target.value)} />\r\n                                <input className=\"invoice-input\"\r\n                                    value={companyCont}\r\n                                    type='text' onChange={(e) =>\r\n                                        setCompanyCont(e.target.value.toUpperCase())} />\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        {!update ?\r\n                            <input style={{ marginTop: '20px' }} className=\"btn\" type='submit' value='Add client' />\r\n                            :\r\n                            <input style={{ marginTop: '20px' }} className=\"btn\" type='submit' value='Update client' />\r\n                        }\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients\r\n","import { useEffect, useState } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\"\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst History = ({ generateInvoice }) => {\r\n    const frmt = new Intl.NumberFormat('en-US');\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [openFilter, setOpenFilter] = useState(false);\r\n    const [filteredInvoices, setFilteredInvoices] = useState([]);\r\n\r\n    //filters\r\n    const [filters, setFilters] = useState({\r\n        invoiceSeries: '',\r\n        invoiceDate: '',\r\n        companyName: '',\r\n        clientName: '',\r\n        range:{\r\n            minVal: '',\r\n            maxVal: ''\r\n        }\r\n    });\r\n\r\n    const { \r\n        currentUser,\r\n        getInvoices,\r\n        invoices,\r\n        userCompanies,\r\n        getCompanies,\r\n        clients,\r\n        getClients,\r\n        deleteInvoice\r\n    } = useAuth();\r\n\r\n    useEffect(() => {\r\n        getInvoices(currentUser.uid)\r\n        getCompanies(currentUser.uid)\r\n        getClients(currentUser.uid)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFilteredInvoices(invoices)\r\n    }, [invoices])\r\n\r\n    useEffect(() => {\r\n        invoices.length && filterInvoiceShow(filters);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters])\r\n\r\n    const filterInvoiceShow = (f) => {\r\n        const getValue = value => (typeof value === 'string' ? value.toUpperCase() : value);\r\n        const filterKeys = Object.keys(f);\r\n        const filterRes = invoices.filter( inv => {\r\n            return filterKeys.every( key => {\r\n                if(!f[key].length && key !== 'range') return invoices;\r\n                if(key === 'range'){\r\n                    if (!f[key].maxVal.length && !f[key].minVal.length) return invoices;\r\n                    if (!f[key].maxVal.length) return getTotalOfOnvoice(inv.items) > parseInt(f[key].minVal);\r\n                    if (!f[key].minVal.length) return getTotalOfOnvoice(inv.items) < parseInt(f[key].maxVal);\r\n                    return getTotalOfOnvoice(inv.items) > parseInt(f[key].minVal) && \r\n                        getTotalOfOnvoice(inv.items) < parseInt(f[key].maxVal);\r\n                }\r\n                return getValue(f[key]).includes(getValue(inv[key]))\r\n            })\r\n        })\r\n        setFilteredInvoices(filterRes)\r\n    }\r\n\r\n    const formatDate = (d) => {\r\n        const res = new Date(d);\r\n        const mnth = res.getMonth()+1 < 10 ? (\"0\" + res.getMonth()+1).slice(-2) : res.getMonth()+1\r\n        const dy = res.getDate() < 10 ? (\"0\" + res.getDate()).slice(-2) : res.getDate()\r\n        return `${dy}/${mnth}/${res.getFullYear()}`;\r\n    }\r\n\r\n    const dateFilter = (d) => {\r\n        if(!d) return '';\r\n        const res = new Date(d);\r\n        const mnth = res.getMonth() + 1 < 10 ? (\"0\" + res.getMonth() + 1).slice(-2) : res.getMonth() + 1\r\n        const dy = res.getDate() < 10 ? (\"0\" + res.getDate()).slice(-2) : res.getDate()\r\n        return `${res.getFullYear()}-${mnth}-${dy}`\r\n    }\r\n\r\n    const viewInvoice = async (id) => {\r\n        setLoading(true);\r\n\r\n        const filterInvoice = invoices.filter(invoice => invoice.invId === id);\r\n\r\n        const currentInvoice = filterInvoice[0];\r\n\r\n        return await new Promise(resolve => setTimeout(() => {resolve(setLoading(false))}, 1500))\r\n        .then(() => {\r\n            generateInvoice(currentInvoice);\r\n            history.push(\"/generated-invoice\");\r\n        })\r\n    }\r\n\r\n    const resetFilters = () => {\r\n        setFilteredInvoices(invoices)\r\n    }\r\n\r\n    const filterTemplate = () => {\r\n        return(\r\n            <div className=\"main-select\" style={{marginBlock:'15px'}}>\r\n                <div className=\"form-structure\">\r\n                    <div className=\"form-labels filter-labels\">\r\n                        <div>Series:</div>\r\n                        <div>Date created:</div>\r\n                        <div>Company:</div>\r\n                        <div>Client:</div>\r\n                    </div>\r\n                    <div className=\"form-input filter-labels\">\r\n                        <input value={filters.invoiceSeries} \r\n                            onChange={(e) => setFilters({ ...filters, invoiceSeries: e.target.value })}\r\n                            type='text' className=\"filter-input\" />\r\n                        <input style={{marginBlock:'0', marginTop:'-30px'}}\r\n                            onChange={(e) => setFilters({ ...filters, invoiceDate: dateFilter(e.target.value) })}\r\n                            type='date' className=\"filter-input\" />  \r\n\r\n                        <select className=\"filter-input\"\r\n                            onChange={(e) => setFilters({ ...filters, companyName: e.target.value })}>\r\n                            <option value={''}>-</option>\r\n                            {userCompanies.map((comp, i) => {\r\n                                return (\r\n                                    <option key={i} value={comp.name}>{comp.name}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n\r\n                        <select className=\"filter-input\"\r\n                            onChange={(e) => setFilters({ ...filters, clientName: e.target.value })}>\r\n                            <option value={''}>-</option>\r\n                            {clients.map((cli, i) => {\r\n                                return (\r\n                                    <option key={i} value={cli.name}>{cli.name}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div style={{marginTop:'-10px'}}>\r\n                    <div>Value range:</div>\r\n                    <input type='number' className=\"filter-input\" style={{width:'25%'}} \r\n                        onChange={(e) => \r\n                            setFilters({ ...filters, range:{...filters.range, minVal: e.target.value} })}/>\r\n                    -\r\n                    <input type='number' className=\"filter-input\" style={{ width: '25%' }}\r\n                        onChange={(e) => \r\n                            setFilters({ ...filters, range: { ...filters.range, maxVal: e.target.value} })} />\r\n                </div>\r\n                <small onClick={resetFilters}\r\n                style={{marginBlock:'-10px', textDecoration:'underline', cursor:'pointer', userSelect:'none'}}>\r\n                    reset filters\r\n                </small>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getTotalOfOnvoice = (itms) => {\r\n        let total = 0;\r\n\r\n        itms.map(itm => {\r\n            return total += parseFloat(itm.val) + parseFloat(itm.tva);\r\n        })\r\n\r\n        return total.toFixed(2);\r\n    }\r\n\r\n    const deleteInv = (id) => {\r\n        deleteInvoice(id);\r\n        getInvoices(currentUser.uid)\r\n    }\r\n\r\n    const invoiceTemplate = () => {\r\n        return(\r\n            <>\r\n            {filteredInvoices.length > 0 ?\r\n                filteredInvoices.map(invoice => {\r\n                    return(\r\n                        <div style={{marginBlock:'20px'}} key={invoice.invId} className=\"main-select history-main\">\r\n                            <h3>\r\n                                <small>Invoice series: </small>\r\n                                {invoice.invoiceSeries}\r\n                                <small> nr: </small>\r\n                                {invoice.invoiceNr}\r\n                                <small> from: </small>\r\n                                {formatDate(invoice.invoiceDate)}\r\n                            </h3>\r\n                            <div className=\"history-row\">\r\n                                <div>\r\n                                    <div>Furnizor:</div>\r\n                                    <h3>{invoice.companyName}</h3>\r\n                                    <div style={{ fontStyle: 'italic' }}>{invoice.companyCIF}</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div>Client:</div>\r\n                                    <h3>{invoice.clientName}</h3>\r\n                                    <div style={{ fontStyle: 'italic' }}>{invoice.clientCIF}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div>Value: {frmt.format(getTotalOfOnvoice(invoice.items))} lei</div>\r\n                            <div onClick={() => viewInvoice(invoice.invId)}\r\n                            style={{ textDecoration: 'underline', cursor: 'pointer', userSelect: 'none' }}>\r\n                                Preview invoice\r\n                            </div>\r\n                            <small onClick={() => deleteInv(invoice.invId)} title=\"Delete invoice\"\r\n                                style={{ textDecoration: 'underline', cursor: 'pointer', userSelect: 'none',\r\n                                color:'red', marginTop:'-20px' }}>\r\n                                Delete\r\n                            </small>\r\n                        </div>\r\n                    )\r\n                })\r\n                :\r\n                <div>No invoices..</div>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>History</h1>\r\n            <NavigationBar />\r\n            <div onClick={() => setOpenFilter(!openFilter)}\r\n                style={{ textDecoration: 'underline', cursor: 'pointer', userSelect: 'none', marginBottom:'15px'}}>\r\n                    Filters\r\n            </div>\r\n            {openFilter && filterTemplate()}\r\n            {invoices.length > 0 && <div>Showing {filteredInvoices.length} invoices</div>}\r\n            {!loading ? invoiceTemplate() : <div id=\"overlay\"><div className=\"spinner\"></div></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import { useState, useEffect } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\"\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../Contexts/AuthContext\";\r\n\r\nconst Products = () => {\r\n    const frmt = new Intl.NumberFormat('en-US');\r\n\r\n    const history = useHistory();\r\n\r\n    const [prodId, setProdId] = useState('');\r\n\r\n    const [compId, setCompId] = useState('any')\r\n\r\n    const [name, setName] = useState('');\r\n    const [um, setUm] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n\r\n    const [addNew, setAddNew] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getCompanies(currentUser.uid)\r\n        getProducts(currentUser.uid)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const { userCompanies,\r\n        getCompanies,\r\n        currentUser,\r\n        products,\r\n        getProducts,\r\n        deleteProduct,\r\n        newProduct,\r\n        updateProduct\r\n    } = useAuth();\r\n\r\n    const resetValues = () => {\r\n        setName('')\r\n        setUm('')\r\n        setPrice(0)\r\n        setCompId('any')\r\n    }\r\n\r\n    const toggleForm = () => {\r\n        if (currentUser.emailVerified) {\r\n            setAddNew(!addNew)\r\n            addNew && resetValues();\r\n            setUpdate(false)\r\n        }\r\n        else {\r\n            const ask = window.confirm('Verify email to create a product/service');\r\n            if (ask) {\r\n                history.push('/profile')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const editProd = (id) => {\r\n        const prodFilter = products.filter((prod) => prod.prodId === id)\r\n\r\n        const currentProd = prodFilter[0];\r\n\r\n        setProdId(currentProd.prodId)\r\n        setName(currentProd.name)\r\n        setUm(currentProd.um)\r\n        setPrice(currentProd.price)\r\n        setCompId(currentProd.compId)\r\n        setUpdate(true)\r\n        setAddNew(true)\r\n    }\r\n\r\n    const deleteProd = (id) => {\r\n        deleteProduct(id);\r\n        getProducts(currentUser.uid)\r\n    }\r\n\r\n    const editField = (id) => {\r\n        return (\r\n            <>\r\n                <span title=\"edit\" onClick={() => editProd(id)}\r\n                    style={{ padding: '5px' }} className=\"btn\">✏️</span>\r\n\r\n                <span title=\"delete\" onClick={() => deleteProd(id)}\r\n                    style={{ cursor: 'pointer' }}>❌</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const newProd = (e) => {\r\n        e.preventDefault()\r\n        if (update) {\r\n            updateProduct(prodId, name, um, price, compId)\r\n            setAddNew(false)\r\n            resetValues();\r\n            setUpdate(false)\r\n            getProducts(currentUser.uid)\r\n        }\r\n        else {\r\n            newProduct(name, um, price, compId)\r\n            setAddNew(false)\r\n            resetValues();\r\n            getProducts(currentUser.uid)\r\n        }\r\n    }\r\n\r\n    const getCompName = (id) => {\r\n        if(id !== 'any'){\r\n            const compFilter = userCompanies.filter((comp) => comp.compId === id)\r\n            const currentComp = compFilter[0];\r\n            return currentComp.name;\r\n        }\r\n        return 'Any';\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            <h1 style={{ paddingTop: '5%', fontSize: '50px' }}>\r\n                Products & Services\r\n            </h1>\r\n            <NavigationBar />\r\n            <div className=\"main-select\">\r\n                {products.length > 0 ?\r\n                    <table className=\"table-item-preview\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Nr.</th>\r\n                                <th>Name</th>\r\n                                <th>UM</th>\r\n                                <th>Pice</th>\r\n                                <th>Comp</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            {\r\n                                products.map((prod, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td>\r\n                                                {i + 1}\r\n                                            </td>\r\n                                            <td>\r\n                                                {prod.name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {prod.um}\r\n                                            </td>\r\n                                            <td>\r\n                                                {frmt.format(prod.price)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {getCompName(prod.compId)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {editField(prod.prodId)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                :\r\n                    <div>No products/services..\r\n                        <span onClick={() => toggleForm()}\r\n                            style={{ textDecoration: 'underline', cursor: 'pointer', userSelect: 'none' }}>\r\n                            add one\r\n                        </span>\r\n                    </div>\r\n                }\r\n                <div className=\"btn\" onClick={() => toggleForm()}>Add new product/service</div>\r\n            </div>\r\n            {addNew && \r\n                <div className=\"main-select\">\r\n                    <form onSubmit={newProd}>\r\n                        {!update ? <h2>New Product/Service</h2> : <h2>{name}</h2>}\r\n                        <div className=\"form-structure\">\r\n                            <div className=\"form-labels\">\r\n                                <label>Denumire:</label>\r\n                                <label>UM:</label>\r\n                                <label>Preț unitar:</label>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <input className=\"invoice-input\" type='text'\r\n                                    value={name} onChange={(e) => setName(e.target.value)} required />\r\n                                <input className=\"invoice-input\" type='text'\r\n                                    value={um} onChange={(e) => setUm(e.target.value)} required />\r\n                                <input className=\"invoice-input\" type='number' placeholder=\"lei\" step=\"0.01\" min={0}\r\n                                    value={price} onChange={(e) =>\r\n                                        setPrice(e.target.value)} required />\r\n                            </div>\r\n                        </div>\r\n                        <h4>For company:</h4>\r\n                        <select className=\"invoice-input\" defaultValue={compId} required\r\n                            onChange={(e) => setCompId(e.target.value)}>\r\n                            <option value={'any'}>Any</option>\r\n                            {userCompanies.map((comp, i) => {\r\n                                return (\r\n                                    <option key={i} value={comp.compId}>\r\n                                        {comp.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                        <br />\r\n                        <input style={{ marginTop: '20px' }} className=\"btn\" \r\n                            type='submit' value={update ? 'Update product/service' : 'Add product/service'} />\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { AuthProvider } from \"./Contexts/AuthContext\";\n\nimport Invoice from \"./Components/Invoice\";\nimport MainMenu from \"./Components/MainMenu\";\nimport NewInvoice from \"./Components/NewInvoice\";\n//import FrontPage from \"./Components/FrontPage\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport MyCompanies from \"./Components/MyCompanies\";\nimport MyProfile from \"./Components/MyProfile\";\nimport Clients from \"./Components/Clients\";\nimport History from \"./Components/History\";\nimport Products from \"./Components/Products\";\n\nfunction App() {\n  const [invoiceData, setInvoiceData] = useState([]);\n\n  const generateInvoice = (data) => {\n    setInvoiceData(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={MainMenu} />\n\n            <PrivateRoute exact path=\"/react-invoice-generator-RO\" component={MainMenu} />\n\n            {/* <Route component={() => <FrontPage/>} path=\"/\" exact /> */}\n\n            {/* <Route component={() => <MainMenu/>} path=\"/menu\" exact /> */}\n\n            <Route component={Login} path=\"/login\"  />\n\n            <Route component={Register} path=\"/register\"  />\n\n            <PrivateRoute component={MyCompanies} path=\"/companies\"  />\n\n            <PrivateRoute component={MyProfile} path=\"/profile\" />\n\n            <PrivateRoute component={Clients} path=\"/clients\" />\n\n            <PrivateRoute component={Products} path=\"/products\" />\n\n            <PrivateRoute component={() => <History generateInvoice={generateInvoice}/>} path=\"/history\" />\n\n            <PrivateRoute component={() => <NewInvoice generateInvoice={generateInvoice}/>} path=\"/new-invoice\" />\n\n            <Route path=\"/generated-invoice\">\n              <Invoice data={invoiceData} />\n            </Route>\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nconst AppMobile = () => {\r\n    return (\r\n        <div className=\"mobile-main\">\r\n            <div className=\"mobile-text\">\r\n                <div>⭐⭐⭐</div>\r\n                Please access this website on a computer.\r\n                <div>⭐⭐⭐</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppMobile\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport AppMobile from './AppMobile';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserView>\n      <App />\n    </BrowserView>\n    <MobileView>\n      <AppMobile />\n    </MobileView>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}